{"ast":null,"code":"import _objectSpread from \"C:/Users/user6974g/Downloads/SCMS_NEW-main/scms_updated/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\user6974g\\\\Downloads\\\\SCMS_NEW-main\\\\scms_updated\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport ApiService from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = _ref => {\n  _s2();\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(null);\n  const refreshUserData = () => {\n    const storedToken = localStorage.getItem('token');\n    const storedUser = localStorage.getItem('user');\n    const legacyUser = localStorage.getItem('scms_logged_in_user');\n    if (storedToken && storedUser) {\n      try {\n        const userData = JSON.parse(storedUser);\n        setUser(userData);\n        setToken(storedToken);\n      } catch (error) {\n        console.error('Error parsing user data:', error);\n        logout();\n      }\n    } else if (legacyUser) {\n      // Support for existing local storage authentication\n      try {\n        const userData = JSON.parse(legacyUser);\n        setUser(userData);\n        setToken(null);\n      } catch (error) {\n        console.error('Error parsing legacy user data:', error);\n        localStorage.removeItem('scms_logged_in_user');\n        setUser(null);\n        setToken(null);\n      }\n    } else {\n      setUser(null);\n      setToken(null);\n    }\n  };\n  useEffect(() => {\n    refreshUserData();\n    setLoading(false);\n  }, []);\n\n  // Listen for localStorage changes (user switching)\n  useEffect(() => {\n    const handleStorageChange = e => {\n      if (e.key === 'scms_logged_in_user' || e.key === 'user' || e.key === 'token') {\n        refreshUserData();\n      }\n    };\n    window.addEventListener('storage', handleStorageChange);\n    return () => window.removeEventListener('storage', handleStorageChange);\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await ApiService.login(email, password);\n      if (response.status) {\n        // Store token and user data\n        localStorage.setItem('token', response.data.token);\n        localStorage.setItem('user', JSON.stringify(response.data));\n        localStorage.setItem('scms_logged_in_user', JSON.stringify(response.data));\n        setUser(response.data);\n        setToken(response.data.token);\n        return {\n          success: true,\n          data: response.data\n        };\n      } else {\n        return {\n          success: false,\n          message: response.message || 'Login failed'\n        };\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      return {\n        success: false,\n        message: error.message || 'Login failed. Please try again.'\n      };\n    }\n  };\n  const logout = async () => {\n    try {\n      if (token) {\n        await ApiService.logout();\n      }\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      localStorage.removeItem('scms_logged_in_user');\n      setUser(null);\n      setToken(null);\n      // Navigate to login page\n      window.location.href = '/auth/login';\n    }\n  };\n  const updateProfile = async userData => {\n    try {\n      const response = await ApiService.updateProfile(userData);\n      if (response.status) {\n        const updatedUser = _objectSpread(_objectSpread({}, user), response.data);\n        localStorage.setItem('user', JSON.stringify(updatedUser));\n        localStorage.setItem('scms_logged_in_user', JSON.stringify(updatedUser));\n        setUser(updatedUser);\n        return {\n          success: true,\n          data: updatedUser\n        };\n      } else {\n        return {\n          success: false,\n          message: response.message || 'Update failed'\n        };\n      }\n    } catch (error) {\n      console.error('Profile update error:', error);\n      return {\n        success: false,\n        message: error.message || 'Update failed. Please try again.'\n      };\n    }\n  };\n  const isAuthenticated = () => {\n    return !!user;\n  };\n  const hasRole = role => {\n    return user && user.role === role;\n  };\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    logout,\n    updateProfile,\n    refreshUserData,\n    isAuthenticated,\n    hasRole\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"Gn6YPsYxft12DVBjBG8NzIcX2EU=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","ApiService","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","_ref","_s2","children","user","setUser","loading","setLoading","token","setToken","refreshUserData","storedToken","localStorage","getItem","storedUser","legacyUser","userData","JSON","parse","error","console","logout","removeItem","handleStorageChange","e","key","window","addEventListener","removeEventListener","login","email","password","response","status","setItem","data","stringify","success","message","location","href","updateProfile","updatedUser","_objectSpread","isAuthenticated","hasRole","role","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user6974g/Downloads/SCMS_NEW-main/scms_updated/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport ApiService from '../services/api';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(null);\n\n  const refreshUserData = () => {\n    const storedToken = localStorage.getItem('token');\n    const storedUser = localStorage.getItem('user');\n    const legacyUser = localStorage.getItem('scms_logged_in_user');\n    \n    if (storedToken && storedUser) {\n      try {\n        const userData = JSON.parse(storedUser);\n        setUser(userData);\n        setToken(storedToken);\n      } catch (error) {\n        console.error('Error parsing user data:', error);\n        logout();\n      }\n    } else if (legacyUser) {\n      // Support for existing local storage authentication\n      try {\n        const userData = JSON.parse(legacyUser);\n        setUser(userData);\n        setToken(null);\n      } catch (error) {\n        console.error('Error parsing legacy user data:', error);\n        localStorage.removeItem('scms_logged_in_user');\n        setUser(null);\n        setToken(null);\n      }\n    } else {\n      setUser(null);\n      setToken(null);\n    }\n  };\n\n  useEffect(() => {\n    refreshUserData();\n    setLoading(false);\n  }, []);\n\n  // Listen for localStorage changes (user switching)\n  useEffect(() => {\n    const handleStorageChange = (e) => {\n      if (e.key === 'scms_logged_in_user' || e.key === 'user' || e.key === 'token') {\n        refreshUserData();\n      }\n    };\n\n    window.addEventListener('storage', handleStorageChange);\n    return () => window.removeEventListener('storage', handleStorageChange);\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n      const response = await ApiService.login(email, password);\n      \n      if (response.status) {\n        // Store token and user data\n        localStorage.setItem('token', response.data.token);\n        localStorage.setItem('user', JSON.stringify(response.data));\n        localStorage.setItem('scms_logged_in_user', JSON.stringify(response.data));\n        \n        setUser(response.data);\n        setToken(response.data.token);\n        \n        return { success: true, data: response.data };\n      } else {\n        return { success: false, message: response.message || 'Login failed' };\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      return { success: false, message: error.message || 'Login failed. Please try again.' };\n    }\n  };\n\n  const logout = async () => {\n    try {\n      if (token) {\n        await ApiService.logout();\n      }\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      localStorage.removeItem('scms_logged_in_user');\n      setUser(null);\n      setToken(null);\n      // Navigate to login page\n      window.location.href = '/auth/login';\n    }\n  };\n\n  const updateProfile = async (userData) => {\n    try {\n      const response = await ApiService.updateProfile(userData);\n      \n      if (response.status) {\n        const updatedUser = { ...user, ...response.data };\n        localStorage.setItem('user', JSON.stringify(updatedUser));\n        localStorage.setItem('scms_logged_in_user', JSON.stringify(updatedUser));\n        setUser(updatedUser);\n        return { success: true, data: updatedUser };\n      } else {\n        return { success: false, message: response.message || 'Update failed' };\n      }\n    } catch (error) {\n      console.error('Profile update error:', error);\n      return { success: false, message: error.message || 'Update failed. Please try again.' };\n    }\n  };\n\n  const isAuthenticated = () => {\n    return !!user;\n  };\n\n  const hasRole = (role) => {\n    return user && user.role === role;\n  };\n\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    logout,\n    updateProfile,\n    refreshUserData,\n    isAuthenticated,\n    hasRole,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}